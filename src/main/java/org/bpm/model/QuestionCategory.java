package org.bpm.model;
// Generated May 13, 2023, 9:40:18 AM by Hibernate Tools 5.4.30.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * QuestionCategory generated by hbm2java
 */
@Entity
@Table(name="question_category"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="name") 
)
public class QuestionCategory  implements java.io.Serializable {


     private short id;
     private String name;
     private String desc;
     private Set<Questions> questionses = new HashSet<Questions>(0);
     private Set<QuestionResponse> questionResponses = new HashSet<QuestionResponse>(0);

    public QuestionCategory() {
    }

	
    public QuestionCategory(short id, String name) {
        this.id = id;
        this.name = name;
    }
    public QuestionCategory(short id, String name, String desc, Set<Questions> questionses, Set<QuestionResponse> questionResponses) {
       this.id = id;
       this.name = name;
       this.desc = desc;
       this.questionses = questionses;
       this.questionResponses = questionResponses;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public short getId() {
        return this.id;
    }
    
    public void setId(short id) {
        this.id = id;
    }

    
    @Column(name="name", unique=true, nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="desc")
    public String getDesc() {
        return this.desc;
    }
    
    public void setDesc(String desc) {
        this.desc = desc;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="questionCategory")
    public Set<Questions> getQuestionses() {
        return this.questionses;
    }
    
    public void setQuestionses(Set<Questions> questionses) {
        this.questionses = questionses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="questionCategory")
    public Set<QuestionResponse> getQuestionResponses() {
        return this.questionResponses;
    }
    
    public void setQuestionResponses(Set<QuestionResponse> questionResponses) {
        this.questionResponses = questionResponses;
    }




}


